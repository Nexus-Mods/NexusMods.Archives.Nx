NexusMods.Archives.Nx.FileProviders.FromFilePathProvider
NexusMods.Archives.Nx.FileProviders.FromFilePathProvider.FilePath.get -> string!
NexusMods.Archives.Nx.FileProviders.FromFilePathProvider.FilePath.init -> void
NexusMods.Archives.Nx.FileProviders.FromFilePathProvider.FromFilePathProvider() -> void
NexusMods.Archives.Nx.FileProviders.FromFilePathProvider.GetFileData(ulong start, ulong length) -> NexusMods.Archives.Nx.Interfaces.IFileData!
NexusMods.Archives.Nx.Headers.Managed.FileEntry.IsChunked(int chunkSizeBytes) -> bool
NexusMods.Archives.Nx.Packing.NxPackerBuilder.WithChunkedDeduplication(bool enable = true) -> NexusMods.Archives.Nx.Packing.NxPackerBuilder!
NexusMods.Archives.Nx.Packing.NxPackerBuilder.WithSolidDeduplication(bool enable = true) -> NexusMods.Archives.Nx.Packing.NxPackerBuilder!
NexusMods.Archives.Nx.Packing.NxRepackerBuilder
NexusMods.Archives.Nx.Packing.NxRepackerBuilder.AddFileFromNxArchive(NexusMods.Archives.Nx.Interfaces.IFileDataProvider! nxSource, NexusMods.Archives.Nx.Headers.Managed.ParsedHeader! header, NexusMods.Archives.Nx.Headers.Managed.FileEntry entry) -> NexusMods.Archives.Nx.Packing.NxRepackerBuilder!
NexusMods.Archives.Nx.Packing.NxRepackerBuilder.AddFilesFromNxArchive(NexusMods.Archives.Nx.Interfaces.IFileDataProvider! nxSource, NexusMods.Archives.Nx.Headers.Managed.ParsedHeader! header, System.Collections.Generic.IEnumerable<NexusMods.Archives.Nx.Headers.Managed.FileEntry>! entries) -> NexusMods.Archives.Nx.Packing.NxRepackerBuilder!
NexusMods.Archives.Nx.Packing.NxRepackerBuilder.AddFilesFromNxArchive(NexusMods.Archives.Nx.Interfaces.IFileDataProvider! nxSource, NexusMods.Archives.Nx.Headers.Managed.ParsedHeader! header, System.Span<NexusMods.Archives.Nx.Headers.Managed.FileEntry> entries) -> NexusMods.Archives.Nx.Packing.NxRepackerBuilder!
NexusMods.Archives.Nx.Packing.NxRepackerBuilder.Build(bool disposeOutput = true) -> System.IO.Stream!
NexusMods.Archives.Nx.Packing.NxRepackerBuilder.NxRepackerBuilder() -> void
NexusMods.Archives.Nx.Packing.Unpack.NxUnpacker.GetParsedHeaderUnsafe() -> NexusMods.Archives.Nx.Headers.Managed.ParsedHeader!
NexusMods.Archives.Nx.Structs.Blocks.ChunkedDeduplicationState
NexusMods.Archives.Nx.Structs.Blocks.ChunkedDeduplicationState.ChunkedDeduplicationState() -> void
NexusMods.Archives.Nx.Structs.Blocks.SolidDeduplicationState
NexusMods.Archives.Nx.Structs.Blocks.SolidDeduplicationState.SolidDeduplicationState() -> void
NexusMods.Archives.Nx.Structs.PackerSettings.ChunkedDeduplicationState.get -> NexusMods.Archives.Nx.Structs.Blocks.ChunkedDeduplicationState?
NexusMods.Archives.Nx.Structs.PackerSettings.ChunkedDeduplicationState.set -> void
NexusMods.Archives.Nx.Structs.PackerSettings.SolidDeduplicationState.get -> NexusMods.Archives.Nx.Structs.Blocks.SolidDeduplicationState?
NexusMods.Archives.Nx.Structs.PackerSettings.SolidDeduplicationState.set -> void
NxDeduplicatingRepackerBuilder
NxDeduplicatingRepackerBuilder.AddFileFromNxArchive(NexusMods.Archives.Nx.Interfaces.IFileDataProvider! nxSource, NexusMods.Archives.Nx.Headers.Managed.ParsedHeader! header, NexusMods.Archives.Nx.Headers.Managed.FileEntry entry) -> NexusMods.Archives.Nx.Packing.NxRepackerBuilder!
NxDeduplicatingRepackerBuilder.AddFilesFromNxArchive(NexusMods.Archives.Nx.Interfaces.IFileDataProvider! nxSource, NexusMods.Archives.Nx.Headers.Managed.ParsedHeader! header, System.Collections.Generic.IEnumerable<NexusMods.Archives.Nx.Headers.Managed.FileEntry>! entries) -> NexusMods.Archives.Nx.Packing.NxRepackerBuilder!
NxDeduplicatingRepackerBuilder.AddFilesFromNxArchive(NexusMods.Archives.Nx.Interfaces.IFileDataProvider! nxSource, NexusMods.Archives.Nx.Headers.Managed.ParsedHeader! header, System.Span<NexusMods.Archives.Nx.Headers.Managed.FileEntry> entries) -> NexusMods.Archives.Nx.Packing.NxRepackerBuilder!
NxDeduplicatingRepackerBuilder.NxDeduplicatingRepackerBuilder() -> void